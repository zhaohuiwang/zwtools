.ONESHELL:

# create a project directory and put this template inside, execute this following command
# make --file=init-pyproject-pythonvenv

.DEFAULT_GOAL := run

#PYTHON = ./venv/bin/python3
# PIP = ./venv/bin/pip
PYTHON = /usr/bin/python3
PIP = /usr/bin/pip

#########################
## Setup ##
#########################

# create virtual environment
venv/bin/activate:
	python3 -m venv venv
	$(PYTHON)
	chmod +x venv/bin/activate
	../venv/bin/activate

# install dependencies
check: venv/bin/activate
	[ ! -f requirements.txt ] && touch requirements.txt && \
    echo 'python' >> requirements.txt \
	$(PIP) install -r requirements.txt

# if already exist, we just need to activate it
venv: venv/bin/activate
	../venv/bin/activate

run: check
	touch demo.py
	echo '#!/bin/python3' >> filename.py && chmod +x demo.py
	$(PYTHON) demo.py



#########################
## appendix ##
#########################
cache.dir := $(shell find . -type d -name __pycache__)
NAME = $(shell whoami)
IAMGE = zhaohuiwang/demo-docker
TAG = latest

DOCKER_IMAGE_TAG = 0.1
DOCKER_IMAGE_NAME = demo-image

.PHONY: clean
clean:
	rm -rf venv
	rm -rf $(cache.dir)
	echo ${NAME}
	
.PHONY: build
build:
	docker build . -t "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"

docker-run: build
	docker run "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"

docker-publish: build
	docker push "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAGG}"